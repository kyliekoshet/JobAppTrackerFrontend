{"ast":null,"code":"import axios from'axios';const API_BASE_URL='http://localhost:8000/api/v1';// Create axios instance with default config\nconst api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Job Applications API\nexport const jobApplicationsApi={// Get all job applications with pagination and filters\ngetAll:async params=>{const response=await api.get('/job-applications',{params});return response.data;},// Get a single job application by ID\ngetById:async id=>{const response=await api.get(`/job-applications/${id}`);return response.data;},// Create a new job application\ncreate:async data=>{const response=await api.post('/job-applications',data);return response.data;},// Update a job application\nupdate:async(id,data)=>{const response=await api.put(`/job-applications/${id}`,data);return response.data;},// Delete a job application\ndelete:async id=>{await api.delete(`/job-applications/${id}`);},// Get summary statistics\ngetStats:async()=>{const response=await api.get('/job-applications/stats');return response.data;}};// Job Scraping API\nexport const jobScrapingApi={// Scrape job details from URL\nscrapeJob:async url=>{const response=await api.post('/scrape-job',{url});return response.data;}};// Health check\nexport const healthApi={check:async()=>{const response=await api.get('/health');return response.data;}};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","jobApplicationsApi","getAll","params","response","get","data","getById","id","post","update","put","delete","getStats","jobScrapingApi","scrapeJob","url","healthApi","check"],"sources":["/Users/kyliekoshet/Documents/MyProjects/JobAppliciationTracker/JobAppTrackerFrontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport {\n  JobApplication,\n  JobApplicationCreate,\n  JobApplicationUpdate,\n  JobApplicationList,\n  ScrapingRequest,\n  ScrapingResponse,\n  SummaryStats\n} from '../types/jobApplication';\n\nconst API_BASE_URL = 'http://localhost:8000/api/v1';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Job Applications API\nexport const jobApplicationsApi = {\n  // Get all job applications with pagination and filters\n  getAll: async (params?: {\n    page?: number;\n    size?: number;\n    status?: string;\n    company?: string;\n    sort_by?: string;\n    sort_order?: 'asc' | 'desc';\n  }): Promise<JobApplicationList> => {\n    const response = await api.get('/job-applications', { params });\n    return response.data;\n  },\n\n  // Get a single job application by ID\n  getById: async (id: number): Promise<JobApplication> => {\n    const response = await api.get(`/job-applications/${id}`);\n    return response.data;\n  },\n\n  // Create a new job application\n  create: async (data: JobApplicationCreate): Promise<JobApplication> => {\n    const response = await api.post('/job-applications', data);\n    return response.data;\n  },\n\n  // Update a job application\n  update: async (id: number, data: JobApplicationUpdate): Promise<JobApplication> => {\n    const response = await api.put(`/job-applications/${id}`, data);\n    return response.data;\n  },\n\n  // Delete a job application\n  delete: async (id: number): Promise<void> => {\n    await api.delete(`/job-applications/${id}`);\n  },\n\n  // Get summary statistics\n  getStats: async (): Promise<SummaryStats> => {\n    const response = await api.get('/job-applications/stats');\n    return response.data;\n  },\n};\n\n// Job Scraping API\nexport const jobScrapingApi = {\n  // Scrape job details from URL\n  scrapeJob: async (url: string): Promise<ScrapingResponse> => {\n    const response = await api.post('/scrape-job', { url } as ScrapingRequest);\n    return response.data;\n  },\n};\n\n// Health check\nexport const healthApi = {\n  check: async (): Promise<{ status: string }> => {\n    const response = await api.get('/health');\n    return response.data;\n  },\n};\n\nexport default api; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAWzB,KAAM,CAAAC,YAAY,CAAG,8BAA8B,CAEnD;AACA,KAAM,CAAAC,GAAG,CAAGF,KAAK,CAACG,MAAM,CAAC,CACvBC,OAAO,CAAEH,YAAY,CACrBI,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CAAAC,kBAAkB,CAAG,CAChC;AACAC,MAAM,CAAE,KAAO,CAAAC,MAOd,EAAkC,CACjC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAP,GAAG,CAACQ,GAAG,CAAC,mBAAmB,CAAE,CAAEF,MAAO,CAAC,CAAC,CAC/D,MAAO,CAAAC,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACAC,OAAO,CAAE,KAAO,CAAAC,EAAU,EAA8B,CACtD,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAP,GAAG,CAACQ,GAAG,CAAC,qBAAqBG,EAAE,EAAE,CAAC,CACzD,MAAO,CAAAJ,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACAR,MAAM,CAAE,KAAO,CAAAQ,IAA0B,EAA8B,CACrE,KAAM,CAAAF,QAAQ,CAAG,KAAM,CAAAP,GAAG,CAACY,IAAI,CAAC,mBAAmB,CAAEH,IAAI,CAAC,CAC1D,MAAO,CAAAF,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACAI,MAAM,CAAE,KAAAA,CAAOF,EAAU,CAAEF,IAA0B,GAA8B,CACjF,KAAM,CAAAF,QAAQ,CAAG,KAAM,CAAAP,GAAG,CAACc,GAAG,CAAC,qBAAqBH,EAAE,EAAE,CAAEF,IAAI,CAAC,CAC/D,MAAO,CAAAF,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACAM,MAAM,CAAE,KAAO,CAAAJ,EAAU,EAAoB,CAC3C,KAAM,CAAAX,GAAG,CAACe,MAAM,CAAC,qBAAqBJ,EAAE,EAAE,CAAC,CAC7C,CAAC,CAED;AACAK,QAAQ,CAAE,KAAAA,CAAA,GAAmC,CAC3C,KAAM,CAAAT,QAAQ,CAAG,KAAM,CAAAP,GAAG,CAACQ,GAAG,CAAC,yBAAyB,CAAC,CACzD,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAQ,cAAc,CAAG,CAC5B;AACAC,SAAS,CAAE,KAAO,CAAAC,GAAW,EAAgC,CAC3D,KAAM,CAAAZ,QAAQ,CAAG,KAAM,CAAAP,GAAG,CAACY,IAAI,CAAC,aAAa,CAAE,CAAEO,GAAI,CAAoB,CAAC,CAC1E,MAAO,CAAAZ,QAAQ,CAACE,IAAI,CACtB,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAW,SAAS,CAAG,CACvBC,KAAK,CAAE,KAAAA,CAAA,GAAyC,CAC9C,KAAM,CAAAd,QAAQ,CAAG,KAAM,CAAAP,GAAG,CAACQ,GAAG,CAAC,SAAS,CAAC,CACzC,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CACF,CAAC,CAED,cAAe,CAAAT,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}